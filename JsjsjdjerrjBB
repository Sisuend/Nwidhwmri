    _G.Delay = 2
    local Players = game:GetService("Players")
    local workspace = game.Workspace
    local player = Players.LocalPlayer
    local win = player.leaderstats.Wins.Value
    local kill = player.leaderstats.Elims.Value
    local Players = game:GetService("Players")
    local Player = Players.LocalPlayer or Players.PlayerAdded:Wait()
    local Replicated = game:GetService("ReplicatedStorage")
    local currentTime = os.date("%H:%M:%S")
    local Remote = Replicated:WaitForChild("Remotes")
    local Balls = workspace:WaitForChild("Balls")    
    

    local function FindBall()

        local RealBall
        for i, v in pairs(Balls:GetChildren()) do
            if v:GetAttribute("realBall") == true then
                RealBall = v
                break -- Exit the loop once the real ball is found
            end
        end
        return RealBall
    end

    local function CreateUI()
        local ScreenGui = Instance.new("ScreenGui")
        ScreenGui.Name = "BallTracker"
        ScreenGui.Parent = Player.PlayerGui

        local Frame = Instance.new("Frame")
        Frame.Size = UDim2.new(0, 150, 0, 90)
        Frame.Position = UDim2.new(0, 10, 0, 10)
        Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        Frame.BackgroundTransparency = 0.5
        Frame.Parent = ScreenGui

        local DistanceLabel = Instance.new("TextLabel")
        DistanceLabel.Size = UDim2.new(1, 0, 0, 30)
        DistanceLabel.Position = UDim2.new(0, 0, 0, 0)
        DistanceLabel.BackgroundTransparency = 1
        DistanceLabel.Text = "Distance: N/A"
        DistanceLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        DistanceLabel.Parent = Frame

        local VeloLabel = Instance.new("TextLabel")
        VeloLabel.Size = UDim2.new(1, 0, 0, 30)
        VeloLabel.Position = UDim2.new(0, 0, 0, 30)
        VeloLabel.BackgroundTransparency = 1
        VeloLabel.Text = "Velocity: N/A"
        VeloLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        VeloLabel.Parent = Frame

        -- Ping
        local PingLabel = Instance.new("TextLabel")
        PingLabel.Size = UDim2.new(1, 0, 0, 30)
        PingLabel.Position = UDim2.new(0, 0, 0, 60)
        PingLabel.BackgroundTransparency = 1
        PingLabel.Text = "Ping: N/A"
        PingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        PingLabel.Parent = Frame

        game:GetService("RunService").RenderStepped:Connect(function()
            local Ball = FindBall()
            if Ball then
                local Distance = Player:DistanceFromCharacter(Ball.Position)
                DistanceLabel.Text = string.format("Distance: %.2f", Distance)
                local Velocity = Ball.AssemblyLinearVelocity.Magnitude
                VeloLabel.Text = string.format("Velocity: %.2f", Velocity)
            else
                DistanceLabel.Text = "Distance: N/A"
                VeloLabel.Text = "Velocity: N/A"
            end

            local Ping = game:GetService("Stats"):FindFirstChild("Network") and game:GetService("Stats"):FindFirstChild("Network"):FindFirstChild("ServerStatsItem") and game:GetService("Stats"):FindFirstChild("Network"):FindFirstChild("ServerStatsItem"):FindFirstChild("Data Ping")
            if Ping then
                PingLabel.Text = string.format("Ping: %d", Ping:GetValue())
            else
                PingLabel.Text = "Ping: N/A"
            end
        end)
    end

    CreateUI()

    Player.CharacterAdded:Connect(function()
        if Player.PlayerGui:FindFirstChild("BallTracker") then
            Player.PlayerGui.BallTracker:Destroy()
        end
        CreateUI()
    end)
    -- UI Creation
    local UI = loadstring(game:HttpGet('https://raw.githubusercontent.com/JakeisSoBad/ganteng/main/MTHICHSKIDKO.lua'))()
    local Window = UI:Create('GANTENG HUB', 'BLADE BALL', 'Premium User')
    local Main = Window:CreateTab('Main', 'home')
    local Log = Window:CreateTab('Log', 'home')
    local Status = Window:CreateTab('Status', 'home')

    -- Main Tab
    Main:CreateLabel("Main")
    Main:CreateToggle("Auto Parry", false, function(val)
        _G.on = val
        local Players = game:GetService("Players")
    local Player = Players.LocalPlayer or Players.PlayerAdded:Wait()
    local Replicated = game:GetService("ReplicatedStorage")

    local Remote = Replicated:WaitForChild("Remotes")
    local Balls = workspace:WaitForChild("Balls")

    local function IsTheTarget()
        return Player.Character and Player.Character:FindFirstChild("Highlight")
    end

    local function FindBall()
        local RealBall
        for i, v in pairs(Balls:GetChildren()) do
            if v:GetAttribute("realBall") == true then
                RealBall = v
                break
            end
        end
        return RealBall
    end

    game:GetService("RunService").PreRender:Connect(function()
        local Ball = FindBall()
        if not Ball then
            return
        end
        
        local Velocity = Ball.AssemblyLinearVelocity.Magnitude
        local BallPosition = Ball.Position
        local Distance = Player:DistanceFromCharacter(BallPosition)
        
        if Distance <= 40 and IsTheTarget() and _G.on then
            local currentTime = os.time()
            Remote:WaitForChild("ParryButtonPress"):Fire()
        end        
        if Velocity >= 200 and IsTheTarget() and _G.on then
            if Distance <= 80 then
                Remote:WaitForChild("ParryButtonPress"):Fire()
                
            end
        end
        if Velocity >= 250 and IsTheTarget() and _G.on then
            if Distance <= 85 then
                Remote:WaitForChild("ParryButtonPress"):Fire()
                
            end
        end
        if Velocity >= 400 and IsTheTarget() and _G.on then
            if Distance <= 90 then
                Remote:WaitForChild("ParryButtonPress"):Fire()
                
            end
        end
        if Velocity >= 500 and IsTheTarget() and _G.on then
            if Distance <= 95 then
                Remote:WaitForChild("ParryButtonPress"):Fire()
                
            end
        end
        if Velocity >= 600 and IsTheTarget() and _G.on then
            if Distance <= 100 then
                Remote:WaitForChild("ParryButtonPress"):Fire()
            end
        end
    end)
    end)
    Main:CreateToggle("Detect Spam Parry", false, function(val)
        _G.start = val
        local function get_plr()
            return game.Players.LocalPlayer
        end
        
        local function get_plrChar()
            local plrChar = get_plr().Character
            if plrChar then
            return plrChar
            end
        end
        
        local function get_plrRP()
            local plrRP = get_plrChar():FindFirstChild("HumanoidRootPart")
            if plrRP then
            return plrRP
            end
        end
        
        local function playerJump()
            pcall(function()
            game.Players.LocalPlayer.Character.Humanoid.Jump = true
            end)
        end
        
        local function get_PlayersNumber()
            local Alive = workspace:WaitForChild("Alive", 20):GetChildren()
            local PlayersNumber = 0
            for _,v in pairs(Alive) do
            if v and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 50 then
                PlayersNumber = PlayersNumber + 1
            end
            end
            return PlayersNumber
        end
        
        local function get_ProxyPlayer()
            local Players = workspace:WaitForChild("Alive"):GetChildren()
            local Distance = math.huge
            local plr = game.Players.LocalPlayer
            local plrRP = plr.Character:FindFirstChild("HumanoidRootPart")
            local Player = nil
            
            for _,plr1 in pairs(Players) do
            if plr1.Name ~= plr.Name and plrRP and plr1:FindFirstChild("HumanoidRootPart") and plr1:FindFirstChild("Humanoid") and plr1.Humanoid.Health > 50 then
                local magnitude = (plr1.HumanoidRootPart.Position - plrRP.Position).Magnitude
                if magnitude <= Distance then
                Distance = magnitude
                Player = plr1
                end
            end
            end
            return Player
        end
        
        local function Click_Button()
            task.spawn(function()
            local plr = game.Players.LocalPlayer
            local plrFind = workspace.Alive:FindFirstChild(plr.Name)
            if plrFind then
                local plrs = 0
                for _,v in pairs(workspace:WaitForChild("Alive", 10):GetChildren()) do
                plrs = plrs + 1
                end
                if plrs > 1 then
                local args = {[1] = 1.5,[2] = CFrame.new(-254, 112, -119) * CFrame.Angles(-2, 0, 2),[3] = {
                ["2617721424"] = Vector3.new(-273, -724, -20),
                },[4] = {[1] = 910,[2] = 154}}
                game:GetService("ReplicatedStorage").Remotes.ParryAttempt:FireServer(unpack(args))task.wait()
                end
            end
            end)
        end
        
        task.spawn(function()
            while task.wait() do
            if getgenv().SpamClickA and _G.start then
                Click_Button()
                _G.log = true
                _G.count = 1
            end
            end
        end)
        if _G.log then
            if _G.count == 1 then
            Log:CreateLabel("In"..currentTime..". Player Started Spam")
            wait(10)
            _G.count = 0
            end
        end
        local function DetectSpam()
            local Balls = workspace:WaitForChild("Balls", 20)
            
            local OldPos = Vector3.new()
            local OldTick1 = tick()
            
            local OldBall = Balls
            local TargetPlayer = ""
            local SpamNum = 0
            local BallSpeed = 0
            local BallDistance = 0
            
            task.spawn(function()
            local OldTick = tick()
            local OldPos = Vector3.new()
            while getgenv().DetectSpam do task.wait()
                local plrRP = get_plrRP()
                local Ball = Balls:FindFirstChildOfClass("Part")
                if plrRP and Ball then
                BallDistance = (plrRP.Position - Ball.Position).Magnitude
                BallSpeed = (OldPos - Ball.Position).Magnitude
                if tick() - OldTick >= 1/60 then
                    OldTick = tick()
                    OldPos = Ball.Position
                end
                end
            end
            end)
            
            while getgenv().DetectSpam do task.wait()
            local Ball = Balls:FindFirstChildOfClass("Part")
            local plrRP = get_plrRP()
            local ProxyPlayer = get_ProxyPlayer()
            
            if not Ball then
                getgenv().SpamClickA = false
            end
            
            if Ball and Ball:GetAttribute("realBall") and OldBall ~= Ball then
            
                Ball.Changed:Connect(function()task.wait()
                local Ball = Balls:FindFirstChildOfClass("Part")
                
                if Ball then
                    TargetPlayer = Ball:GetAttribute("target")
                    
                    if ProxyPlayer and TargetPlayer == ProxyPlayer.Name or get_plr() and TargetPlayer == get_plr().Name then
                    SpamNum = SpamNum + 1
                    else
                    SpamNum = 0
                    end
                    
                    local args = ProxyPlayer and ProxyPlayer:FindFirstChild("HumanoidRootPart")
                    local HL1 = ProxyPlayer and ProxyPlayer:FindFirstChild("Highlight")
                    local HL2 = get_plrChar() and get_plrChar():FindFirstChild("Highlight")
                    
                    if plrRP and HL1 and args or plrRP and HL2 and args then
                    local DistancePlayer = (ProxyPlayer.HumanoidRootPart.Position - plrRP.Position).Magnitude
                    local DistanceBall = (Ball.Position - plrRP.Position).Magnitude
                    
                    if get_PlayersNumber() < 3 then
                        if DistancePlayer <= 30 and DistanceBall <= 35 and SpamNum >= 2 then
                        getgenv().SpamClickA = true
                        else
                        getgenv().SpamClickA = false
                        end
                    else
                        if DistancePlayer <= 30 and DistanceBall <= 35 and SpamNum >= 3 then
                        getgenv().SpamClickA = true
                        else
                        getgenv().SpamClickA = false
                        end
                    end
                    else
                    getgenv().SpamClickA = false
                    end
                end
                end)
                OldBall = Ball
            end
            end
        end
        
        getgenv().DetectSpam = true
        DetectSpam()
    end)
    Main:CreateToggle("AI Auto Move", false, function(val)
        getgenv().ai = val
        local Players = game:GetService("Players")
        local Player = Players.LocalPlayer
        local targetPositions = {
            Vector3.new(-166, 10, -170),
            Vector3.new(-179, 8, 45),
            Vector3.new(-391, 6, 40),
            Vector3.new(-380, 8, -190)
        }
        local function getRandomTargetPosition()
            local randomIndex = math.random(1, #targetPositions)
            return targetPositions[randomIndex]
        end
        local function calculateMoveDirection(targetPosition)
            return (targetPosition - Player.Character.HumanoidRootPart.Position).Unit
        end
        local function move()
            local targetPosition = getRandomTargetPosition()
            local moveDirection = calculateMoveDirection(targetPosition)
            Player.Character.Humanoid:MoveTo(Player.Character.HumanoidRootPart.Position + moveDirection * 50) 
            wait(_G.Delay)
        end
        
        while getgenv().ai == true do
            move()
        end
        
    end)
    Main:CreateSlider("Delay AI",1,10,2,function(val)
        _G.Delay = val
    end)
    
    Status:CreateLabel("Player Name: " .. player.Name)
    Status:CreateLabel("Total Wins: " .. win)
    Status:CreateLabel("Total Kills: " .. kill)
    
    Window:CreateButton('earth', false, function(val)
        if val then
            Window:Notify('Time Change', 'Night', 1.5)
            game:GetService('TweenService'):Create(game:GetService('Lighting'), TweenInfo.new(0.5), { ClockTime = 0 }):Play()
        else
            Window:Notify('Time Change', 'Day', 1.5)
            game:GetService('TweenService'):Create(game:GetService('Lighting'), TweenInfo.new(0.5), { ClockTime = 14 }):Play()
        end
    end)

    Window:CreateButton('ads', false, function(val)
        if val then
            Window:Notify('FOV Change', '120', 1)
            game:GetService('TweenService'):Create(workspace.CurrentCamera, TweenInfo.new(0.5), { FieldOfView = 120 }):Play()
        else
            Window:Notify('FOV Change', '70', 1)
            game:GetService('TweenService'):Create(workspace.CurrentCamera, TweenInfo.new(0.5), { FieldOfView = 70 }):Play()
        end
    end)
    local lastHighlightState = false
    local lastWinState = win

    while wait(.00000000000000000000000000000001) do
        local currentHighlightState = Player.Character:FindFirstChild("Highlight") ~= nil
        local currentWinState = win

        if currentHighlightState ~= lastHighlightState then
            if currentHighlightState then
                Log:CreateLabel("In Target")
            else
                Log:CreateLabel("Not In Target")
            end
            lastHighlightState = currentHighlightState
        end

        if currentWinState ~= lastWinState then
            Log:CreateLabel("New Win")
            lastWinState = currentWinState
        end
    end
